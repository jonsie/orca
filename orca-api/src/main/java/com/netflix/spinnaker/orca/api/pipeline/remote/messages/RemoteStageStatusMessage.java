package com.netflix.spinnaker.orca.api.pipeline.remote.messages;

import com.netflix.spinnaker.kork.annotations.Alpha;
import com.netflix.spinnaker.orca.api.pipeline.models.ExecutionStatus;
import lombok.Builder;
import lombok.Data;

import java.time.Instant;
import java.util.Collection;
import java.util.Map;

/**
 * Message sent when a remote stage updates status.
 */
@Alpha
@Data
@Builder
public class RemoteStageStatusMessage implements RemoteStageMessage {
  private String stageExecutionId;
  private String pipelineExecutionId;

  /** The {@link ExecutionStatus} of the remote stage. */
  private ExecutionStatus status;

  /** The remote stage outputs, for use in downstream stages. */
  private Map<String, Object> outputs;

  /** The remote stage startTime, may differ from the Orca stage startTime. */
  private Instant startTime;

  /** The remote stage endTime, may differ from the Orca stage endTime. */
  private Instant endTime;

  /** The error generated by remote stage if the stage ends in failure. */
  private Error error;

  /**
   * A collection of {@link RemoteStageTaskStatus} to provide periodic updates to the user regarding
   * the task state of the remote stage.
   */
  private Collection<RemoteStageTaskStatus> tasks;

  @Override
  public String getStageExecutionId() {
    return null;
  }

  @Override
  public String getPipelineExecutionId() {
    return null;
  }

  /**
   * Represents a remote stage task.  Can be used to provide information to the end-user about state
   * of the remote stage.
   *
   * TODO(jonsie): Include refId for task order?
   * TODO(jonsie): Determine how this can be used in Deck to provide task information.
   */
  @Data
  @Builder
  public static class RemoteStageTaskStatus {

    /** The human-readable remote task name. */
    private String name;

    /** The human-readable remote task description. */
    private String description;

    /** TThe {@link ExecutionStatus} of the remote task. */
    private ExecutionStatus status;

    /** The remote stage task startTime. */
    private Instant startTime;

    /** The remote stage task endTime. */
    private Instant endTime;

    /** The error generated by remote task if the task ends in failure. */
    private Error error;
  }
}
